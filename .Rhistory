xml <- xmlTree()
xml$addTag("events", close=F)
xml$addTag("event", close=T, attrs = c(program = const$program, orgUnit = const$orgUnit, status = const$status, storedBy = const$storedBy))
xml$addTag("coordinate", close=T, attrs = c(latitude = const$latitude, longitude = const$longitude))
xml$addTag("dataValues", close=F)
xml$addTag("dataValue", close=T, attrs = c(dataElement = "DEtest", value = "DEValue"))
xml$closeTag()
xml$closeTag()
cat(saveXML(xml))
xml
saveXML(xml)
cat(saveXML(xml))
data<- structure(list(page = c("Page One", "Page Two"), base64 = c("Very Long String thats a base64 character", "Very Long String thats a base64 character")), .Names = c("page", "base64"), row.names = 1:2, class = "data.frame")
names(data) <- c("title", "page")
data
head(finalTable, 8)
finalTable$eventDate[1]
finalTable$eventDate[2]
xml <- xmlTree()
xml$addTag("events", close=F)
for (i in 1:nrow(finalTable)) {
xml$addTag("event", close=F, attrs = c(program = const$program, orgUnit = const$orgUnit, eventDate = finalTable$eventDate[i], status = const$status, storedBy = const$storedBy))
xml$addTag("coordinate", close=T, attrs = c(latitude = const$latitude, longitude = const$longitude))
xml$addTag("dataValues", close=F)
xml$addTag("dataValue", close=T, attrs = c(dataElement = "DEtest", value = "DEValue"))
xml$closeTag()
xml$closeTag()
}
cat(saveXML(xml))
cat(saveXML(xml))
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
nrow(finalTable)
head(varsTable)
head(varsTable, 10)
head(rowVars, 10)
head(varsTable, 10)
head(allcases, 10)
allcases$location <- paste("[", allcases$lng, ",", allcases$lat, "]")
head(allcases, 10)
allcases$location <- paste("[", allcases$lng, ",", allcases$lat, "]", sep = "")
head(allcases, 10)
sub <- allcases[10,]
sub
sub <- allcases[,10]
sub
sub <- allcases[,10]
sub <- allcases[,10]
sub
allcases[, 5]
head(allcases)
sub <- allcases[c(1:10),]
sub
nrow(sub)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
allcases$eventDate[i]
typeof(allcases$eventDate)
typeof(to.character(allcases$eventDate))
typeof(as.character(allcases$eventDate))
allcases$eventDate <- as.character(allcases$eventDate)
sub <- allcases[c(1:10),]
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
allcases$gender[1]
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
saveXML(xml, file = "KenemaTest.xml")
saveXML(xml, file = "KenemaTest.xml", indent=TRUE)
saveXML(xml, file = "KenemaTest.xml", indent=F)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
cat(saveXML(xml))
head(allcases)
head(pcr)
allcases$load <- pcr
head(pcr)
head(allcases)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator.R', echo=TRUE)
nrow(allcases)
library(dplyr)
tibble(r = rnorm(5))
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r>=0 ~ 1, r<0 ~NA))
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r>=0 ~ 1, r<0 ~ NA, TRUE ~ as.character(r)))
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ 1, r<0 ~ 'NA'))
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ TRUE, r<0 ~ NA))
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ 1, r<0 ~ NA))
source('~/.active-rstudio-document', echo=TRUE)
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ 1, r<0 ~ NA))
tibble(r = rnorm(5)) %>%
tibble(r = rnorm(5))
tibble(r = rnorm(5))
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ TRUE, r<0 ~ NA))
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ '1', r<0 ~ 'NA'))
str(a)
a <- tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ '1', r<0 ~ 'NA'))
str(a)
as.numeric(a)
rp
a <- tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ '1', r<0 ~ 'NA'))
rp
as.logical('NA')
a <- tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ '1', r<0 ~ 'NA')) %>%
case_when(rp == '1' ~ as.numeric(rp), rp == 'NA' ~ as.logical(rp) )
a <- tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ '1', r<0 ~ 'NA')) %>%
case_when(rp == '1' ~ as.numeric(rp))
a <- tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ '1', r<0 ~ 'NA')) %>%
case_when(rp = '1' ~ as.numeric(rp))
View(a)
a[1]
a[2]
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ '1', r<0 ~ 'NA')) %>%
case_when(rp == '1' ~ as.numeric(rp), rp == 'NA' ~ as.logical(rp) )
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ '1', r<0 ~ 'NA')) %>%
mutate(rp = case_when(rp == '1' ~ as.numeric(rp)))
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ '1', r<0 ~ 'NA')) %>%
mutate(rp = case_when(rp == '1' ~ as.numeric(rp), , rp == 'NA' ~ as.logical(rp) ))
tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ '1', r<0 ~ 'NA')) %>%
mutate(rp = case_when(rp == '1' ~ as.numeric(rp), rp == 'NA' ~ as.logical(rp) ))
a <- tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ 1, r<0 ~ as.numeric(NA)))
a
a <- tibble(r = rnorm(5)) %>%
mutate(rp = case_when(r >= 0 ~ 1, r<0 ~ as.numeric(NA)))
a
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(XML)
install.packages("xml2")
library(xml2)
medatada_mumps_raw_xml <- read.csv("~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/medatada_mumps_raw_xml.xml", sep="")
View(medatada_mumps_raw_xml)
pg <- read_xml("~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/medatada_mumps_raw_xml.xml")
bisps <- xml_find_all(pg, "//BioSample")
head(bisps)
biosam <- xml_find_all(pg, "//BioSample")
length(biosam)
?trimws
# extract and clean all the columns
vals <- trimws(xml_text(recs))
# get all the <BioSample>s
samples <- xml_find_all(pg, "//BioSample")
# extract and clean all the columns
vals <- trimws(xml_text(samples))
head(vals)
head(vals, 1)
head(vals)
head(samples, 1)
samples[1]
print(samples[1])
?print
View(samples)
samples[[1]]
unlist(xpathApply(samples, "Owner", xmlValue))
unlist(xpathApply(samples[[1]], "Owner", xmlValue))
unlist(xpathApply(samples[[1]], "//Owner", xmlValue))
unlist(xpathApply(samples, "//Owner", xmlValue))
library(xml)
xml <- xmlTreeParse("~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/medatada_mumps_raw_xml.xml", useInternal=TRUE)
head(xml)
xml <- xmlTreeParse("~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/medatada_mumps_raw_xml.xml", useInternal=TRUE)
xml
unlist(xpathApply(xml, "//Owner", xmlValue))
clear
samples[[1]]
unlist(xpathApply(xml, "//Ids", xmlValue))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(xml)
library("xml")
source('~/.active-rstudio-document', echo=TRUE)
header(t)
source('~/.active-rstudio-document', echo=TRUE)
samples[[1]]
samples[[1]][1]
samples[[1]][2]
head(t)
samples[[[1]]]
samples[[1]][2]
samples[[1]]$node
samples[[1]]$doc
samples[[1]]
unlist(xpathApply(xml[1], "//Attributes", xmlValue))
unlist(xpathApply(xml, "//Attributes", xmlValue))
unlist(xpathApply(xml, "//Attributes", xmlValue))[1]
source('~/.active-rstudio-document', echo=TRUE)
?xmlToList
xmlToList(xml)
head(xmlToList(xml), 1)
install.packages("RJSONIO")
library(RJSONIO)
toJSON()
?toJSON()
toJSON()?
json <- toJSON(list)
toJSON(list)
library(jsonlite)
detach("package:RJSONIO", unload=TRUE)
library(jsonlite)
json <- toJSON(list)
head(json)
json
source('~/.active-rstudio-document', echo=TRUE)
head(json)
json <- toJSON(list, pretty = T)
head(json)
install.packages("readr")
library(readr)
json <- toJSON(list, pretty = T) %>% write_lines("~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/medatada_mumps_raw_json.json)
json <- toJSON(list, pretty = T) %>% write_lines("~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/medatada_mumps_raw_json.json")
write_lines(json, "~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/medatada_mumps_raw_json.json")
?xmlToList
head(list)
?toJSON
head(json)
head(list, 1)
head(list, 2)
list[2]
list[5]
typeof(list)
as.data.frame(list)
head(list, 2)
library(RJSONIO)
cat(RJSONIO::toJSON(list))
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsXmlToJson.R', echo=TRUE)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsXmlToJson.R', echo=TRUE)
head(json2)
json2
json2 <- cat(RJSONIO::toJSON(list))
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsXmlToJson.R', echo=TRUE)
head(json2)
?cat
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsXmlToJson.R', echo=TRUE)
head(json2)
library(readr)
metadata_mumps_csv_raw <- read_csv("~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/metadata_mumps_csv_raw.csv")
View(metadata_mumps_csv_raw)
source('~/.active-rstudio-document', echo=TRUE)
typeof(mumps)
df <- as.data.frame(mumps)
head(Df)
head(df)
View(df)
names(df)
df.r <- df %>% select(Ids/Id/1/__text)
df.r <- df %>% select("Ids/Id/1/__text")
head(df.r)
source('~/.active-rstudio-document', echo=TRUE)
head(df.r)
head(df.r)
?names
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(df.r)
head(df.r$onse)
head(df.r$onset)
df.r
typeof(df.r)
typeof(df)
install.packages("tidyverse")
detach("package:dplyr", unload=TRUE)
library(tidyverse)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
typeof(df.r)
typeof(df)
df2 <- as_tibble(df)
typeof(df2)
head(df2)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
head(df.r)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
head(df.r)
View(df.r)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
haed(df.r)
head(df.r)
df.r$onset
df.b <- do.call('rbind', strsplit(as.character(df.r$onset),';',fixed=TRUE))
head(df.b)
strsplit()
?strsplit
df.r %>% mutate(test = strsplit(as.character(onset), ';', fixed=TRUE)[1]  )
df.r$onset
df.r$test
df.r %>% mutate('test' = strsplit(as.character(onset), ';', fixed=TRUE)[1]  )
test
df.b <- do.call('rbind', strsplit(as.character(df.r$onset),';',fixed=TRUE))
head(df.b)
head(as_tibble(df.b))
df.b <- do.call('rbind', strsplit(as.character(df.r$onset),';',fixed=TRUE)) %>% strsplit(':')
head(df.b)
df.b <- do.call('rbind', strsplit(as.character(df.r$onset),';',fixed=TRUE))
head(df.b)
df.c <- strsplit(df.b[,1], ';')
head(df.c)
df.c <- strsplit(df.b[,1], ':')
head(df.c)
df.c <- strsplit(df.b[,1], ':')[2]
head(df.c)
df.c <- strsplit(df.b[,1], ': ')
head(df.c)
head(df.d)
head(df.b)
df.d <- strsplit(df.b[,2], ': ')
head(df.d)
head(df.c)
head(df.d)
df.d
df.c <- strsplit(as.character(df.b[,1]), ': ')
head(df.c)
df.c <- do.call('rbind', strsplit(as.character(df.b[,1]), ': '))
df.c <- do.call('rbind', strsplit(as.character(df.b[,1]), ': '))
head(df.c)
df.d <- do.call('rbind', strsplit(as.character(df.b[,2]), ': '))
head(df.d)
df.r <- rbind("symptom_onset": df.c[,2])
df.r <- rbind(df.r, "symptom_onset": df.c[,2])
df.r <- rbind(df.r, symptom_onset = df.c[,2])
head(df.r)
View(df.r)
df.c[,2]
df.r <- rbind(df.r, as.character(symptom_onset = df.c[,2]))
df.r <- cbind(df.r, (symptom_onset = df.c[,2]))
df.r <- cbind(df.r, df.c[,2])
head(df.c)
head(df.r)
length(df.r)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
head(df.r)
df.r <- cbind(df.r, onset_date = df.c[,2])
head(df.c)
head(df.d)
df.r <- cbind(df.r, onset_date = df.c[,2], symptoms = df.d[,2])
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
df.final <- select(df.r, -onset)
View(df.final)
str(df.final)
write.csv?
?write.csv
write.csv(df.final, "~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/metadata_mumps_csv_clean.csv")
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
View(df)
View(df.final)
UE)
lookup <- read_delim("~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/muv-names.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
head(lookup)
head(df.final$id)
colnames(lookup) <- c("lookup_id", "Pubmed_id")
head(df.final$id)
head(lookup)
library(stringr)
str_split_fixed("MuV-007|Massachusetts.USA|GEN:G|2016-03-02", "|", 2)
str_split_fixed("MuV-007|Massachusetts.USA|GEN:G|2016-03-02", "|", 1)
?str_split
str_split("MuV-007|Massachusetts.USA|GEN:G|2016-03-02", "|", 3)
str_split("MuV-007|Massachusetts.USA|GEN:G|2016-03-02", "|", 1)
str_split("MuV-007|Massachusetts.USA|GEN:G|2016-03-02", "|", 2)
str_split("MuV-007|Massachusetts.USA|GEN:G|2016-03-02", "|", 4)
str_split(lookup$lookup_id, "|", 3)
do.call('rbind', strsplit(as.character(lookup$lookup_id),'|',fixed=TRUE))
split.lookup <- do.call('rbind', strsplit(as.character(lookup$lookup_id),'|',fixed=TRUE))
head(split.lookup)
split.lookup <- as_tibble(do.call('rbind', strsplit(as.character(lookup$lookup_id),'|',fixed=TRUE)))
head(split.lookup)
within(split.lookup, V2 <- as_tibble(do.call('rbind', strsplit(as.character(V2), '.', fixed=TRUE))))
split.lookup$V2
within(split.lookup, V2 <- as_tibble(do.call('rbind', strsplit(as.character(V2), '.', fixed=TRUE))))
within(split.lookup, V2 <- data.frame(do.call('rbind', strsplit(as.character(V2), '.', fixed=TRUE))))
split.lookup[,2]
within(split.lookup, split.lookup[,2] <- as_tibble(do.call('rbind', strsplit(as.character(V2), '.', fixed=TRUE))))
split.mass <- as_tibble(do.call('rbind', strsplit(as.character(split.lookup$V2),'|',fixed=TRUE)))
head(split.mass)
split.mass <- as_tibble(do.call('rbind', strsplit(as.character(split.lookup$V2),'.',fixed=TRUE)))
head(split.mass)
split.lookup <- cbind(split.lookup, split.mass)
head(split.lookup)
split.lookop[,5] <- as.date(split.lookop[,5])
split.lookop[,5] <- as.Date(split.lookop[,5])
split.lookup <- cbind(split.lookup, split.mass)
split.lookop[,5] <- as.Date(split.lookop[,5])
head(split.lookup)
head(split.lookup[,5])
head(split.lookup[,4])
split.lookop[,5] <- as.Date(split.lookop[,4])
split.lookup[,4] <- as.Date(split.lookup[,4])
head(split.lookup)
str(split.lookup)
format(split.lookup[,4], format="%D-%Y-%M")
?format
format(split.lookup[,4], format="%D-%M-%Y")
head(split.lookup[,4])
str(split.lookup[,4])
library(lubridate)
format(split.lookup[,4], format="%D-%M-%Y")
format(parse_date_time(split.lookup[,4], "Ymd"), format="%D-%M-%Y")
format(parse_date_time(split.lookup[,4], "Ymd"), format="%D-%M-%y")
format(parse_date_time(split.lookup[,4], "Y-m-d"), format="%D-%M-%y")
format(parse_date_time(split.lookup[,4], "Y-m-d"), format="%d-%m-%y")
format(parse_date_time(split.lookup[,4], "Y-m-d"), format="%d-%m-%Y")
format(parse_date_time(split.lookup[,4], "Y-m-d"), format="%d-%M-%Y")
format(parse_date_time(split.lookup[,4], "Y-m-d"), format="%d-%m-%Y")
format(parse_date_time(split.lookup[,4], "Y-m-d"), format="%d-%b-%Y")
split.lookup[,4] <- format(parse_date_time(split.lookup[,4], "Y-m-d"), format="%d-%b-%Y")
head(split.lookup)
?paste
fasta <- cbind(split.lookup[,1], paste(split.lookup[,6], split.lookup[,5], sep = ":"), split.lookup[,4])
head(fasta)
fasta <- paste(fasta[,1], fasta[,2], fasta[,3], sep = "|")
head(fasta)
head(lookup)
looukp$fasta_id <- cbind(lookup, fasta)
looukp$fasta_id <- cbind(lookup, fasta)
lookup$fasta_id <- cbind(lookup, fasta)
lookup$fasta_id <- as_tibble(cbind(lookup, fasta))
lookup$fasta_id <- cbind(lookup, fasta)
head(lookup)
lookup$fasta_id <- fasta
head(lookup)
lookup <- cbind(lookup, fasta)
head(lookup)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
head(lookup)
lookup <- cbind(lookup, fasta_id)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
lookup <- cbind(lookup, fasta_id)
head(lookup)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
head(lookup)
head(split.lookup)
head(fasta)
head(split.lookup)
newick <- paste(split.lookup[,1], split.lookup[,6], split.lookup[,5], split.lookup[,4], sep = "_")
head(newick)
head(lookup)
lookup <- cbind(lookup, fasta_id = fasta, newick_id = newick)
View(lookup)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
View(lookup)
View(lookup)
head(df.r)
lookup %>% select(-lookup_id)
View(lookup)
lookup <- lookup %>% select(-lookup_id)
View(lookup)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
df.final <- select(df.r, -onset) %>% left_join(lookup)
View(df.final)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
colnames(df.final)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
write.csv(df.final, "~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/metadata_mumps_csv_clean.csv")
head(lookup)
head(split.lookup)
lookup <- cbind(lookup, identifier = split.lookup[,1], fasta_id = fasta, newick_id = newick)
head(lookup)
lookup <- cbind(identifier = split.lookup[,1], lookup, fasta_id = fasta, newick_id = newick)
head(lookup)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
write.csv(df.final, "~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/metadata_mumps_csv_clean.csv")
head(df)
View(df)
head(df.r)
source('~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/mumpsCsvToCleanCsv.R', echo=TRUE)
write.csv(df.final, "~/Documents/IDV/3 Fall 2017/Thesis/data/Mumps 2016/metadata_mumps/metadata_mumps_csv_clean.csv")
# Dependencies
library(truncnorm)
library(dplyr)
library(reshape2)
library(XML)
n <- 200
# constant dimensions
const <- list(status            = 'ACTIVE',
program           = 'vtHPxcCgu25', #Kenema 2014 Outbreak
enrollment        = '',
programStage      = 'Wn7LAv17lfS',
orgUnit           = 'kJq2mPyFEHo', #kenema
AmO6YwrO46f       = "MqD4UQm3eBd", #district = Kailahun
dueDate           = '2017-07-12T19:11:19.801',
latitude          = 0,
longitude         = 0,
storedBy          = 'admin',
providedElsewhere = '')
source('~/projects/Kenema Event Data Generator/eventData_generator_v2.R', echo=TRUE)
source('~/projects/Kenema Event Data Generator/eventData_generator_v2.R', echo=TRUE)
